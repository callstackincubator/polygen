name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
    paths:
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Builds docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            docs/.next/cache
          key: ${{ runner.os }}-docs-${{ hashFiles('docs/yarn.lock') }}-${{ hashFiles('docs/**/*.js', 'docs/**/*.jsx', 'docs/**/*.ts', 'docs/**/*.tsx', 'docs/**/*.jsm', 'docs/**/*.mdx?', 'docs/**/*.json') }}
          restore-keys: |
            ${{ runner.os }}-docs-${{ hashFiles('docs/yarn.lock') }}

      - name: Download deps
        working-directory: ./docs
        run: yarn install --immutable
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - name: Build docs
        working-directory: ./docs
        run: DOCS_BASE_PATH=/polygen yarn build

      - name: Upload docs as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/out/

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
