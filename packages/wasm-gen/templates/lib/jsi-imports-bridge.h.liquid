{% render "header.liquid" %}
#pragma once
#include <jsi/jsi.h>
#include "{{ moduleName }}.h"

{% for importedModuleName in importModuleNames %}
struct w2c_{{ importedModuleName | mangle_module_name }} {
  {{ moduleContextCTypeName }}* root;
  facebook::jsi::Runtime& rt;
  facebook::jsi::Object importObj;
};
{% endfor %}

namespace facebook::react {

class {{ moduleName | mangle_module_name | capitalize }}ModuleContext: public jsi::NativeState {
public:
  {{ moduleName | mangle_module_name | capitalize }}ModuleContext(jsi::Runtime& rt, jsi::Object&& importObject)
    : importObject(std::move(importObject))
      {% for importedModuleName in importModuleNames -%}
      , import{{ importedModuleName | mangle_module_name }}Ctx{&rootCtx, rt, this->importObject.getPropertyAsObject(rt, "{{ importedModuleName }}")}
      {% endfor %}
  {}

  jsi::Object importObject;
  {{ moduleContextCTypeName }} rootCtx;
  {% for importedModuleName in importModuleNames -%}
  w2c_{{ importedModuleName | mangle_module_name }} import{{ importedModuleName | mangle_module_name }}Ctx;
  {% endfor %}
};

}
