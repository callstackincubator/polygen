{% render "header.liquid" %}
#include "mediator.h"

const std::vector<std::string> module_names {
  {% for generatedModule in generatedModules %}
    "{{ generatedModule.name }}"{% unless forloop.last %},{% endunless %}
  {% endfor %}
};

namespace facebook::react {

{% for generatedModule in generatedModules %}
std::unique_ptr<Module> create{{ generatedModule.name | mangle_module_name | capitalize }}Module();
{% endfor %}

std::unique_ptr<Module> loadWebAssemblyModule(const std::string& name) {
{% for generatedModule in generatedModules %}
  if (name == "{{ generatedModule.name }}") {
    return create{{ generatedModule.name | mangle_module_name | capitalize }}Module();
  }
{% endfor %}
  return nullptr;
}

}
